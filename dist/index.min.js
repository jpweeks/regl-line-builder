!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.REGLLineBuilder={})}(this,function(e){"use strict";function t(){let e=new I(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e}function n(e){let t=new I(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t}function r(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e}function i(e,t,n,r,i,o,s){return e[0]=t,e[1]=n,e[2]=r,e[3]=i,e[4]=o,e[5]=s,e}function o(e,t,n){let r=t[0],i=t[1],o=t[2],s=t[3],a=t[4],c=t[5],u=Math.sin(n),f=Math.cos(n);return e[0]=r*f+o*u,e[1]=i*f+s*u,e[2]=r*-u+o*f,e[3]=i*-u+s*f,e[4]=a,e[5]=c,e}function s(e,t,n){let r=t[0],i=t[1],o=t[2],s=t[3],a=t[4],c=t[5],u=n[0],f=n[1];return e[0]=r*u,e[1]=i*u,e[2]=o*f,e[3]=s*f,e[4]=a,e[5]=c,e}function a(e,t,n){let r=t[0],i=t[1],o=t[2],s=t[3],a=t[4],c=t[5],u=n[0],f=n[1];return e[0]=r,e[1]=i,e[2]=o,e[3]=s,e[4]=r*u+o*f+a,e[5]=i*u+s*f+c,e}function c(){let e=new I(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function u(){let e=new I(3);return e[0]=0,e[1]=0,e[2]=0,e}function f(e,t,n){let r=new I(3);return r[0]=e,r[1]=t,r[2]=n,r}function l(e,t){let n=t[0],r=t[1],i=t[2],o=n*n+r*r+i*i;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o),e}function v(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function d(e,t,n){let r=t[0],i=t[1],o=t[2],s=n[0],a=n[1],c=n[2];return e[0]=i*c-o*a,e[1]=o*s-r*c,e[2]=r*a-i*s,e}function h(){let e=new I(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e}function m(){let e=new I(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function p(e,t,n){n*=.5;let r=Math.sin(n);return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=Math.cos(n),e}function y(e,t,n,r){let i,o,s,a,c,u=t[0],f=t[1],l=t[2],v=t[3],d=n[0],h=n[1],m=n[2],p=n[3];return(o=u*d+f*h+l*m+v*p)<0&&(o=-o,d=-d,h=-h,m=-m,p=-p),1-o>1e-6?(i=Math.acos(o),s=Math.sin(i),a=Math.sin((1-r)*i)/s,c=Math.sin(r*i)/s):(a=1-r,c=r),e[0]=a*u+c*d,e[1]=a*f+c*h,e[2]=a*l+c*m,e[3]=a*v+c*p,e}function x(e,t){let n,r=t[0]+t[4]+t[8];if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{let r=0;t[4]>t[0]&&(r=1),t[8]>t[3*r+r]&&(r=2);let i=(r+1)%3,o=(r+2)%3;n=Math.sqrt(t[3*r+r]-t[3*i+i]-t[3*o+o]+1),e[r]=.5*n,n=.5/n,e[3]=(t[3*i+o]-t[3*o+i])*n,e[i]=(t[3*i+r]+t[3*r+i])*n,e[o]=(t[3*o+r]+t[3*r+o])*n}return e}function b(){let e=new I(2);return e[0]=0,e[1]=0,e}function w(e,t){return e[0]=t[0],e[1]=t[1],e}function g(e,t,n){return e[0]=t,e[1]=n,e}function P(e,t){var n=t[0]-e[0],r=t[1]-e[1];return Math.sqrt(n*n+r*r)}function S(e,t,n){var r=t[0],i=t[1];return e[0]=n[0]*r+n[2]*i+n[4],e[1]=n[1]*r+n[3]*i+n[5],e}function M(e,t){var n=parseInt(t.replace(/^#/,""),16),r=Math.floor(n);e[0]=(r>>16&255)/255,e[1]=(r>>8&255)/255,e[2]=(255&r)/255}function j(e){return function(){var t=Object.create(e.prototype);return e.apply(t,arguments),t}}function L(e){var t=!1;return function(){t||(t=!0,console.warn(e))}}function A(e,t){this.context=this.createContext(e),this.state=this.createState(t),this.resources=this.createResources(),this.attributes=this.createAttributes(),this.draw=this.createDrawCommand()}let I="undefined"!=typeof Float32Array?Float32Array:Array;const k=function(e){let t=e[0],n=e[1],r=e[2];return Math.sqrt(t*t+n*n+r*r)},T=(function(){let e=u()}(),function(){let e=h()}(),function(e,t){let n=t[0],r=t[1],i=t[2],o=t[3],s=n*n+r*r+i*i+o*o;return s>0&&(s=1/Math.sqrt(s),e[0]=n*s,e[1]=r*s,e[2]=i*s,e[3]=o*s),e});(function(){let e=u(),t=f(1,0,0),n=f(0,1,0)})(),function(){let e=m(),t=m()}(),function(){let e=c()}(),function(){let e=b()}();var W={frag:"precision highp float;\n#define GLSLIFY 1\nuniform vec4 tint;\nvarying vec4 vColor;\nvarying vec2 vUD;\n\nvoid main() {\n  gl_FragColor = vColor * tint;\n}\n",vert:"// Based on WebGL lines demo\n// (c) 2015 Matt DesLauriers. MIT License\n// https://github.com/mattdesl/webgl-lines/\n\nprecision highp float;\n#define GLSLIFY 1\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform float aspect;\n\nuniform float thickness;\nuniform float miterLimit;\n\n// TODO: Enable compiling for 2 or 3 dimensional lines\nattribute vec2 prevPosition;\nattribute vec2 currPosition;\nattribute vec2 nextPosition;\n// attribute vec3 prevPosition;\n// attribute vec3 currPosition;\n// attribute vec3 nextPosition;\n\nattribute float offset;\nattribute vec4 color;\nattribute vec2 ud;\n\nvarying vec4 vColor;\nvarying vec2 vUD;\n\nvoid main() {\n  vec2 aspectVec = vec2(aspect, 1.0);\n  mat4 projViewModel = projection * view * model;\n\n  // TODO: Refactor to import/export as standalone function\n  vec4 prevProjected = projViewModel * vec4(prevPosition, 0.0, 1.0);\n  vec4 currProjected = projViewModel * vec4(currPosition, 0.0, 1.0);\n  vec4 nextProjected = projViewModel * vec4(nextPosition, 0.0, 1.0);\n\n  // get 2D screen space with W divide and aspect correction\n  vec2 prevScreen = prevProjected.xy / prevProjected.w * aspectVec;\n  vec2 currScreen = currProjected.xy / currProjected.w * aspectVec;\n  vec2 nextScreen = nextProjected.xy / nextProjected.w * aspectVec;\n\n  vec2 dir = vec2(0.0);\n  float len = thickness;\n\n  // starting point uses (next - current)\n  if (currScreen == prevScreen) {\n    dir = normalize(nextScreen - currScreen);\n  }\n  // ending point uses (current - previous)\n  else if (currScreen == nextScreen) {\n    dir = normalize(currScreen - prevScreen);\n  }\n  // somewhere in middle, needs a join\n  else {\n    // get directions from (C - B) and (B - A)\n    vec2 dirA = normalize((currScreen - prevScreen));\n    if (int(miterLimit) == -1) {\n      dir = dirA;\n    } else {\n      vec2 dirB = normalize((nextScreen - currScreen));\n      // now compute the miter join normal and length\n      vec2 tangent = normalize(dirA + dirB);\n      vec2 perp = vec2(-dirA.y, dirA.x);\n      vec2 miter = vec2(-tangent.y, tangent.x);\n      dir = tangent;\n      len /= dot(miter, perp);\n    }\n  }\n\n  vec2 normal = vec2(-dir.y, dir.x) *\n    clamp(len, 0.0, max(thickness, miterLimit)) / aspectVec;\n\n  vColor = color;\n  vUD = ud;\n\n  gl_Position = currProjected + vec4(normal * offset, 0.0, 1.0);\n}\n"},D=Float32Array.BYTES_PER_ELEMENT,C=["beginPath","moveTo","lineTo","arc","closePath","stroke","strokeRect","setLineDash","setTransform","translate","scale","rotate","save","restore"],O=["globalAlpha","lineDashOffset","lineWidth","strokeStyle"],q=b();!function(e,t,n){t.create=j(t),e&&(t.prototype=Object.create(e.prototype)),t.prototype.constructor=t,Object.assign(t.prototype,n)}(null,A,{createContext:function(e){return{regl:e}},createState:function(e){return{cursor:{vertex:0,element:0,quad:0,stride:e.stride||2,max:e.bufferSize||1024},sync:{vertex:0},style:{color:[0,0,0,1],lineWidth:1,strokeStyle:"#000000"},transform:{isIdentity:!0,matrix:t()},activePath:null,prevPosition:b(),paths:[],saveStack:[]}},createResources:function(){var e=this.context.regl,t=this.state.cursor,n=this.createResourceViews(t.max,t.stride),r=e.buffer({usage:"dynamic",type:"float",data:n.position}),i=e.buffer({usage:"dynamic",type:"float",data:n.offset}),o=e.buffer({usage:"dynamic",type:"float",data:n.color}),s=e.buffer({usage:"dynamic",type:"float",data:n.ud}),a=e.elements({usage:"dynamic",type:"uint16",primitive:"triangles",data:n.elements});return{position:{view:n.position,buffer:r},offset:{view:n.offset,buffer:i},color:{view:n.color,buffer:o},ud:{view:n.ud,buffer:s},elements:{view:n.elements,buffer:a}}},createResourceViews:function(e,t){return{position:new Float32Array(e*t*2),offset:new Float32Array(2*e),color:new Float32Array(4*e*2),ud:new Float32Array(2*e*3),elements:new Uint16Array(4*e)}},createAttributes:function(){var e=this.resources,t=this.state.cursor.stride,n=e.position,r=e.color,i=e.ud,o=e.offset;return{prevPosition:{buffer:n.buffer,offset:0,stride:D*t},currPosition:{buffer:n.buffer,offset:D*t*2,stride:D*t},nextPosition:{buffer:n.buffer,offset:D*t*4,stride:D*t},offset:o.buffer,ud:i.buffer,color:r.buffer}},createDrawCommand:function(){var e=this.attributes,t=this.context.regl,n=this.resources,r=this.state,i={aspect:function(e,t){return e.viewportWidth/e.viewportHeight},thickness:function(e,t){return t.thickness/(200*e.viewportHeight/e.viewportWidth)},miterLimit:function(e,t){return t.miterLimit/(200*e.viewportHeight/e.viewportWidth)},model:t.prop("model"),tint:t.prop("tint")},o=t({vert:W.vert,frag:W.frag,uniforms:i,attributes:e,elements:n.elements.buffer,count:function(){return 6*r.cursor.quad},depth:{enable:!1},blend:{enable:!0,equation:"add",func:{src:"src alpha",dst:"one minus src alpha"}}});return function(e){return r.sync.vertex<r.cursor.vertex&&(this.syncResourceBuffers(),r.sync.vertex=r.cursor.vertex),o(e)}.bind(this)},syncResourceBuffers:function(){var e=this.resources,t=e.position,n=e.offset,r=e.color,i=e.ud,o=e.elements;t.buffer.subdata(t.view,0),n.buffer.subdata(n.view,0),r.buffer.subdata(r.view,0),i.buffer.subdata(i.view,0),o.buffer.subdata(o.view,0)},getContext:function(){var e=this,t=this.state,n={};return C.forEach(function(t){n[t]=e[t].bind(e)}),O.forEach(function(r){var i=e[r];Object.defineProperty(n,r,i(t))}),n},resize:function(e){var t=this.state.cursor,n=this.resources,r=this.createResourceViews(e,t.stride);t.max=e,n.position.view=r.position,n.position.buffer({data:r.position}),n.offset.view=r.offset,n.offset.buffer({data:r.offset}),n.color.view=r.color,n.color.buffer({data:r.color}),n.ud.view=r.ud,n.ud.buffer({data:r.ud}),n.elements.view=r.elements,n.elements.buffer({data:r.elements})},reset:function(){var e=this.state,t=e.cursor,n=e.sync,i=e.style,o=e.transform;t.quad=0,t.element=0,t.vertex=0,n.vertex=0,i.lineWidth=1,i.color[0]=0,i.color[1]=0,i.color[2]=0,i.color[3]=1,o.isIdentity=!0,r(o.matrix),e.activePath=null,e.paths.length=0},save:function(){var e=this.state,t=e.style,r=e.transform;e.saveStack.push({style:{lineWidth:t.lineWidth,color:t.color.slice()},transform:{isIdentity:r.isIdentity,matrix:n(r.matrix)}})},restore:function(){var e=this.state,t=e.style,n=e.transform,r=e.saveStack.pop(),i=r.style,o=r.transform;t.lineWidth=i.lineWidth,t.color=i.color,n.isIdentity=o.isIdentity,n.matrix=o.matrix},beginPath:function(){var e=this.state,t=e.activePath,n={offset:t?t.offset+t.count:0,count:0,totalLength:0,isClosed:!1};e.activePath=n,e.paths.push(n)},moveTo:function(e,t){var n=this.state,r=n.activePath,i=n.prevPosition,o=n.cursor,s=o.stride,a=n.style.color,c=.5*n.style.lineWidth,u=this.resources,f=u.position.view,l=u.offset.view,v=u.ud.view,d=u.color.view,h=this.transformInput(e,t),m=o.vertex*s*2,p=m+1,y=(o.vertex+1)*s*2,x=y+1;f[m]=f[m+s]=h[0],f[p]=f[p+s]=h[1],f[y]=f[y+s]=h[0],f[x]=f[x+s]=h[1];var b=2*o.vertex,g=2*(o.vertex+1);l[b+0]=c,l[b+1]=-c,l[g+0]=c,l[g+1]=-c;var P=2*o.vertex*2,S=P+1,M=2*(o.vertex+1)*2,j=M+1;v[P]=0,v[P+2]=1,v[M]=0,v[M+2]=1,v[S]=v[S+2]=0,v[j]=v[j+2]=0;var L=4*o.vertex*2,A=L+1,I=L+2,k=L+3,T=4*(o.vertex+1)*2,W=T+1,D=T+2,C=T+3;d[L]=d[L+4]=a[0],d[A]=d[A+4]=a[1],d[I]=d[I+4]=a[2],d[k]=d[k+4]=a[3],d[T]=d[T+4]=a[0],d[W]=d[W+4]=a[1],d[D]=d[D+4]=a[2],d[C]=d[C+4]=a[3],w(i,h),r.count+=1,o.vertex+=2},lineTo:function(e,t){var n=this.state,r=n.activePath,i=n.prevPosition,o=n.cursor,s=o.stride,a=n.style.color,c=.5*n.style.lineWidth,u=this.resources,f=u.position.view,l=u.offset.view,v=u.color.view,d=u.ud.view,h=u.elements.view,m=this.transformInput(e,t),p=P(i,m),y=r.totalLength+=p,x=o.vertex*s*2,b=x+1;f[x]=f[x+s]=m[0],f[b]=f[b+s]=m[1];var g=2*o.vertex;l[g]=c,l[g+1]=-c;var S=2*(o.vertex-1)*2,M=S+1;d[S]=0,d[S+2]=1,d[M]=d[M+2]=y;var j=4*o.vertex*2,L=j+1,A=j+2,I=j+3;v[j]=v[j+4]=a[0],v[L]=v[L+4]=a[1],v[A]=v[A+4]=a[2],v[I]=v[I+4]=a[3];var k=6*o.quad,T=o.element,W=T+1,D=T+2,C=T+3;h[k+0]=T,h[k+1]=W,h[k+2]=D,h[k+3]=D,h[k+4]=W,h[k+5]=C,w(i,m),r.count+=1,o.quad+=1,o.element+=2,o.vertex+=1},arc:function(e,t,n,r,i,o){for(var s=Math.abs(i-r),a=!0===o?-1:1,c=Math.ceil(s/(Math.PI/10)),u=0;u<c;u++){var f=r+u/(c-1)*s*a,l=e+Math.cos(f)*n,v=t+Math.sin(f)*n;0===u?this.moveTo(l,v):this.lineTo(l,v)}},closePath:function(){var e=this.state,t=e.activePath,n=e.cursor,r=n.stride,i=this.resources.position.view,o=(n.vertex-t.count)*r*2,s=o+1,a=i[o],c=i[s];t.isClosed=!0,this.lineTo(a,c)},copyPosition:function(e,t){var n=this.state.cursor.stride,r=this.resources.position.view,i=e*n*2,o=i+1,s=t*n*2,a=s+1;r[i]=r[i+n]=r[s],r[o]=r[o+n]=r[a]},stroke:function(){var e=this.state,t=e.activePath,n=e.cursor,r=n.stride,i=this.resources,o=i.position.view,s=i.offset.view,a=i.ud.view,c=i.color.view,u=n.vertex-t.count,f=n.vertex-1,l=n.vertex,v=f*r*2,d=v+1,h=l*r*2,m=h+1;o[h]=o[h+r]=o[v],o[m]=o[m+r]=o[d];var p=2*f,y=2*l;s[y]=s[p],s[y+1]=s[p+1];var x=2*f*2+1,b=2*l*2,w=b+1;a[b]=0,a[b+2]=1,a[w]=a[w+2]=a[x];var g=4*f*2,P=g+1,S=g+2,M=g+3,j=4*l*2,L=j+1,A=j+2,I=j+3;c[j]=c[j+4]=c[g],c[L]=c[L+4]=c[P],c[A]=c[A+4]=c[S],c[I]=c[I+4]=c[M],n.element+=6,n.vertex+=1,t.isClosed&&(this.copyPosition(u-1,f-1),this.copyPosition(l,u+1))},strokeRect:function(e,t,n,r){this.beginPath(),this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+r),this.lineTo(e,t+r),this.closePath(),this.stroke()},lineWidth:function(e){return{get:function(){return e.style.lineWidth},set:function(t){return e.style.lineWidth=t,t}}},globalAlpha:function(e){return{get:function(){return e.style.color[3]},set:function(t){return e.style.color[3]=t,t}}},strokeStyle:function(e){return{get:function(){return e.style.strokeStyle},set:function(t){return M(e.style.color,t),e.style.strokeStyle=t,t}}},lineDashOffset:function(){return{get:L("lineDashOffset not implemented"),set:L("lineDashOffset not implemented")}},setLineDash:L("setLineDash not implemented"),setTransform:function(e,t,n,r,o,s){var a=this.state.transform;i(a.matrix,e,t,n,r,o,s),a.isIdentity=!1},translate:function(e,t){var n=this.state.transform,r=g(q,e,t);a(n.matrix,n.matrix,r),n.isIdentity=!1},scale:function(e,t){var n=this.state.transform,r=g(q,e,t);s(n.matrix,n.matrix,r),n.isIdentity=!1},rotate:function(e){var t=this.state.transform;o(t.matrix,t.matrix,e),t.isIdentity=!1},transformInput:function(e,t){var n=this.state.activePath,r=this.state.transform,i=g(q,e,t);return r.isIdentity||n.isClosed||S(i,i,r.matrix),i}}),e.LineBuilder=A,e.line=W,Object.defineProperty(e,"__esModule",{value:!0})});
